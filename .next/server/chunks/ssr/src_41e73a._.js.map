{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/dax/Front-End%20Projects/syncora%20ref%20project/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/dax/Front-End%20Projects/syncora%20ref%20project/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///home/dax/Front-End%20Projects/syncora%20ref%20project/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///home/dax/Front-End%20Projects/syncora%20ref%20project/src/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from '@/lib/utils';\n\nconst Input = React.forwardRef<HTMLInputElement, React.InputHTMLAttributes<HTMLInputElement>>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = 'Input';\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///home/dax/Front-End%20Projects/syncora%20ref%20project/src/components/ui/input-field.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { Label } from './label';\nimport { Input } from './input';\nimport { cn } from '@/lib/utils';\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  type?: 'text' | 'tel' | string;\n  label?: string; // Optional label\n  required?: boolean; // Optional required prop\n  name?: string;\n  error?: string; // Optional error message\n}\n\nconst InputField = React.forwardRef<HTMLInputElement, InputProps>(\n  (\n    { className, name, type = 'text', label, required, error, ...props },\n    ref,\n  ) => {\n    const validatePhoneNumber = (value: string) => {\n      const phoneNumberPattern = /^(1?\\d{10})$/; // Allows 10 or 11 digits\n      return phoneNumberPattern.test(value)\n        ? undefined\n        : 'Invalid phone number format';\n    };\n\n    const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n      if (type === 'tel') {\n        const error = validatePhoneNumber(e.target.value);\n        if (error) {\n          console.error(error); // Handle error\n        }\n      }\n    };\n\n    return (\n      <div className=\"flex flex-col gap-2\">\n        {label && (\n          <Label htmlFor={props.id}>\n            {label}\n            {required && <span style={{ color: 'red' }}> *</span>}\n          </Label>\n        )}\n        <Input\n          id={name}\n          type={type}\n          placeholder={label}\n          ref={ref}\n          // required={required}\n          onBlur={handleBlur}\n          className={cn('border-slate-200 bg-white', className)}\n          {...props}\n        />\n        {error && <p className=\"text-sm text-red-500\">{error}</p>}\n      </div>\n    );\n  },\n);\n\nInputField.displayName = 'InputField';\n\nexport { InputField };\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAgBA,MAAM,2BAAa,sMAAM,UAAU,CACjC,CACE,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,OAAO,EACpE;IAEA,MAAM,sBAAsB,CAAC;QAC3B,MAAM,qBAAqB,gBAAgB,yBAAyB;QACpE,OAAO,mBAAmB,IAAI,CAAC,SAC3B,YACA;IACN;IAEA,MAAM,aAAa,CAAC;QAClB,IAAI,SAAS,OAAO;YAClB,MAAM,QAAQ,oBAAoB,EAAE,MAAM,CAAC,KAAK;YAChD,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,QAAQ,eAAe;YACvC;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;YACZ,uBACC,8OAAC,iIAAA,CAAA,QAAK;gBAAC,SAAS,MAAM,EAAE;;oBACrB;oBACA,0BAAY,8OAAC;wBAAK,OAAO;4BAAE,OAAO;wBAAM;kCAAG;;;;;;;;;;;;0BAGhD,8OAAC,iIAAA,CAAA,QAAK;gBACJ,IAAI;gBACJ,MAAM;gBACN,aAAa;gBACb,KAAK;gBACL,sBAAsB;gBACtB,QAAQ;gBACR,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6BAA6B;gBAC1C,GAAG,KAAK;;;;;;YAEV,uBAAS,8OAAC;gBAAE,WAAU;0BAAwB;;;;;;;;;;;;AAGrD;AAGF,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///home/dax/Front-End%20Projects/syncora%20ref%20project/src/components/ui/input-password.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Eye, EyeOff } from 'lucide-react';\nimport { Input } from './input';\n\nexport interface PasswordInputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string; // Optional label\n  required?: boolean; // Optional required prop\n  error?: string; // Optional error message\n}\n\nconst PasswordInput = React.forwardRef<HTMLInputElement, PasswordInputProps>(\n  ({ className, label, required, error, ...props }, ref) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const togglePasswordVisibility = () => {\n      setShowPassword((prev) => !prev);\n    };\n\n    return (\n      <div className=\"flex flex-col gap-2\">\n        {label && <label className=\"text-sm font-medium\">{label}</label>}\n        <div className=\"relative\">\n          <Input\n            type={showPassword ? 'text' : 'password'}\n            placeholder={label}\n            ref={ref}\n            required={required}\n            className={className}\n            {...props}\n          />\n          <button\n            type=\"button\"\n            onClick={togglePasswordVisibility}\n            aria-label={showPassword ? 'Hide password' : 'Show password'}\n            className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-gray-500 hover:text-gray-700\"\n          >\n            {showPassword ? <EyeOff size={18} /> : <Eye size={18} />}\n          </button>\n        </div>\n        {error && <p className=\"text-sm text-red-500\">{error}</p>}\n      </div>\n    );\n  },\n);\n\nPasswordInput.displayName = 'PasswordInput';\n\nexport { PasswordInput };\n"],"names":[],"mappings":";;;;AAEA;AAGA;AADA;AAAA;AAJA;;;;;;AAcA,MAAM,8BAAgB,sMAAM,UAAU,CACpC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE;IAChD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,2BAA2B;QAC/B,gBAAgB,CAAC,OAAS,CAAC;IAC7B;IAEA,qBACE,8OAAC;QAAI,WAAU;;YACZ,uBAAS,8OAAC;gBAAM,WAAU;0BAAuB;;;;;;0BAClD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,iIAAA,CAAA,QAAK;wBACJ,MAAM,eAAe,SAAS;wBAC9B,aAAa;wBACb,KAAK;wBACL,UAAU;wBACV,WAAW;wBACV,GAAG,KAAK;;;;;;kCAEX,8OAAC;wBACC,MAAK;wBACL,SAAS;wBACT,cAAY,eAAe,kBAAkB;wBAC7C,WAAU;kCAET,6BAAe,8OAAC,0MAAA,CAAA,SAAM;4BAAC,MAAM;;;;;iDAAS,8OAAC,gMAAA,CAAA,MAAG;4BAAC,MAAM;;;;;;;;;;;;;;;;;YAGrD,uBAAS,8OAAC;gBAAE,WAAU;0BAAwB;;;;;;;;;;;;AAGrD;AAGF,cAAc,WAAW,GAAG"}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///home/dax/Front-End%20Projects/syncora%20ref%20project/src/validations/login.validation-schema.ts"],"sourcesContent":["import * as Yup from 'yup';\n\nconst loginValidationSchema = Yup.object({\n  username: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .required('Password is required'),\n  remember: Yup.boolean(),\n});\n\nexport { loginValidationSchema };\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,wBAAwB,oIAAI,MAAM,CAAC;IACvC,UAAU,oIAAI,MAAM,GACjB,KAAK,CAAC,yBACN,QAAQ,CAAC;IACZ,UAAU,oIAAI,MAAM,GACjB,GAAG,CAAC,GAAG,0CACP,QAAQ,CAAC;IACZ,UAAU,oIAAI,OAAO;AACvB"}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":["file:///home/dax/Front-End%20Projects/syncora%20ref%20project/src/components/loginPage/index.tsx"],"sourcesContent":["'use client';\n\nimport { Button } from '@/components/ui/button';\nimport { InputField } from '@/components/ui/input-field';\nimport { PasswordInput } from '@/components/ui/input-password';\nimport { Label } from '@/components/ui/label';\nimport { LoadingSpinner } from '@/components/ui/loading-spinner';\nimport { loginValidationSchema } from '@/validations/login.validation-schema';\nimport { Field, Form, Formik } from 'formik';\nimport Link from 'next/link';\n\nconst LoginUi = ({ handleSubmit }: any) => {\n  return (\n    <div className=\"flex w-full flex-col justify-center bg-orange-100 p-8 md:p-12 lg:w-[40%] lg:p-16\">\n      <div className=\"mx-auto w-full max-w-[400px]\">\n        {/* <div className=\"mb-8\">\n        <Image src={Logo} alt=\"Logo\" width={225} height={96} />\n      </div> */}\n\n        <p className=\"mb-6 text-sm text-gray-400\">\n          Please sign-in to your account and continue to the dashboard.\n        </p>\n\n        <Formik\n          initialValues={{\n            username: '',\n            password: '',\n            remember: false,\n          }}\n          validationSchema={loginValidationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ values, handleChange, handleBlur, touched, errors }) => (\n            <Form className=\"space-y-4\">\n              {/* Email Field */}\n              <div className=\"space-y-2\">\n                <InputField\n                  name=\"username\"\n                  label=\"Email\"\n                  type=\"email\"\n                  placeholder=\"admin@calendax.com\"\n                  value={values.username}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={\n                    touched.username && errors.username\n                      ? errors.username\n                      : undefined\n                  }\n                />\n              </div>\n\n              {/* Password Field */}\n              <div className=\"space-y-2\">\n                <PasswordInput\n                  label=\"Password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={\n                    touched.password && errors.password\n                      ? errors.password\n                      : undefined\n                  }\n                />\n              </div>\n\n              {/* Remember Me Checkbox */}\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Field\n                    type=\"checkbox\"\n                    name=\"remember\"\n                    className=\"border-gray-800 data-[state=checked]:bg-orange-500\"\n                  />\n                  <Label\n                    htmlFor=\"remember\"\n                    className=\"text-xs leading-none text-gray-400 peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                  >\n                    Remember me\n                  </Label>\n                </div>\n\n                <Link\n                  href=\"#\"\n                  className=\"text-xs text-orange-500 hover:text-orange-400\"\n                >\n                  Forgot your password?\n                </Link>\n              </div>\n\n              {/* Submit Button */}\n              <Button\n                type=\"submit\"\n                className=\"w-full bg-orange-500 text-sm hover:bg-orange-600\"\n                // disabled={mutation.isPending}\n              >\n                signin\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginUi;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAEA;AAEA;AADA;AARA;;;;;;;;;AAWA,MAAM,UAAU,CAAC,EAAE,YAAY,EAAO;IACpC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAKb,8OAAC;oBAAE,WAAU;8BAA6B;;;;;;8BAI1C,8OAAC,+IAAA,CAAA,SAAM;oBACL,eAAe;wBACb,UAAU;wBACV,UAAU;wBACV,UAAU;oBACZ;oBACA,kBAAkB,mJAAA,CAAA,wBAAqB;oBACvC,UAAU;8BAET,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,iBACrD,8OAAC,+IAAA,CAAA,OAAI;4BAAC,WAAU;;8CAEd,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,0IAAA,CAAA,aAAU;wCACT,MAAK;wCACL,OAAM;wCACN,MAAK;wCACL,aAAY;wCACZ,OAAO,OAAO,QAAQ;wCACtB,UAAU;wCACV,QAAQ;wCACR,OACE,QAAQ,QAAQ,IAAI,OAAO,QAAQ,GAC/B,OAAO,QAAQ,GACf;;;;;;;;;;;8CAMV,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,6IAAA,CAAA,gBAAa;wCACZ,OAAM;wCACN,IAAG;wCACH,MAAK;wCACL,OAAO,OAAO,QAAQ;wCACtB,UAAU;wCACV,QAAQ;wCACR,OACE,QAAQ,QAAQ,IAAI,OAAO,QAAQ,GAC/B,OAAO,QAAQ,GACf;;;;;;;;;;;8CAMV,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,+IAAA,CAAA,QAAK;oDACJ,MAAK;oDACL,MAAK;oDACL,WAAU;;;;;;8DAEZ,8OAAC,iIAAA,CAAA,QAAK;oDACJ,SAAQ;oDACR,WAAU;8DACX;;;;;;;;;;;;sDAKH,8OAAC,4HAAA,CAAA,UAAI;4CACH,MAAK;4CACL,WAAU;sDACX;;;;;;;;;;;;8CAMH,8OAAC,kIAAA,CAAA,SAAM;oCACL,MAAK;oCACL,WAAU;8CAEX;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf;uCAEe"}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}